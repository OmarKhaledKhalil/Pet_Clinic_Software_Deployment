---
- name: Disable swap
  command: swapoff -a

- name: Ensure swap is disabled in fstab
  replace:
    path: /etc/fstab
    regexp: '^\s*(.+?)\s+swap\s'
    replace: '# \1 swap '

- name: Install libselinux Python binding (only RHEL excluding Amazon Linux)
  yum:
    name: libselinux-python
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution != "Amazon"

- name: Disable SELinux (RHEL family except Amazon Linux)
  selinux:
    state: disabled
  when: ansible_os_family == "RedHat" and ansible_distribution != "Amazon"

- name: Disable SELinux by editing config file (Amazon Linux and others)
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=disabled'
  become: yes
  when: ansible_distribution == "Amazon"

- name: Disable SELinux immediately (Amazon Linux)
  command: setenforce 0
  ignore_errors: yes
  when: ansible_distribution == "Amazon" and ansible_selinux.status == "enabled"

- name: Gather service facts
  service_facts:

- name: Ensure firewalld is stopped and disabled (only if installed)
  service:
    name: firewalld
    state: stopped
    enabled: no
  when: services is defined and "'firewalld.service' in services"

- name: Load necessary kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Configure sysctl parameters
  copy:
    dest: /etc/sysctl.d/kubernetes.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Apply sysctl parameters
  command: sysctl --system

- name: Install essential packages
  yum:
    name:
      - curl
      - wget
      - vim
      - git
      - net-tools
      - unzip
      - tar
      - containerd
    state: present

- name: Enable and start containerd
  systemd:
    name: containerd
    enabled: yes
    state: started
