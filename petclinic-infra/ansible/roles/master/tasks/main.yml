#---
#- name: Enable bridge-nf-call
#  shell: sysctl net.bridge.bridge-nf-call-iptables=1
#  # Enable bridge network traffic to be processed by iptables, needed for Kubernetes networking.

#- name: Enable containerd
#  systemd:
#    name: containerd          # Manage the containerd service
#    state: started            # Start containerd if itâ€™s not running
#    enabled: true             # Enable containerd to start on boot
#  # containerd is the container runtime Kubernetes uses to run containers.

#- name: Initialize Kubernetes Master
#  command: kubeadm init --pod-network-cidr=10.244.0.0/16
#  register: kubeadm_init
#  # Initialize the Kubernetes control plane on this master node,
#  # specifying the pod network CIDR to match the Flannel network plugin.

#- name: Set up kubeconfig for root
#  command: "{{ item }}"
#  with_items:
#    - mkdir -p /root/.kube                         # Create kubeconfig directory for root user
#    - cp -i /etc/kubernetes/admin.conf /root/.kube/config  # Copy admin config to kubeconfig
#    - chown root:root /root/.kube/config          # Set ownership of the kubeconfig file
#  # This allows root user to use kubectl commands with admin privileges.

#- name: Install Flannel Network Plugin
#  shell: |
#    kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
#  # Deploy Flannel as the pod network provider, enabling pod communication across nodes.

#- name: Generate join command
#  shell: kubeadm token create --print-join-command
#  register: join_command
#  # Generate the kubeadm join command with token for worker nodes to join the cluster.

#- name: Save join command to file
#  copy:
#    content: "{{ join_command.stdout }}"
#    dest: /tmp/kube_join.sh
#  # Save the join command to a script file so worker nodes can fetch and execute it.
