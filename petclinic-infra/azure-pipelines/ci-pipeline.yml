trigger:
- main                                         # Trigger pipeline on changes to the 'main' branch

variables:
  - group: AWS_Temporary_Credentials  # Group of variables for AWS temporary credentials.

stages:
- stage: Build                                 # Define the build stage
  jobs:
  - job: BuildAndTest                          # Job for building and testing
    pool:
      vmImage: 'windows-latest'                # Use the latest Windows image for the job
    steps:

    - checkout: self                           # Checkout the code repository

    - task: NodeTool@0                         # Task to install Node.js
      inputs:
        versionSpec: '14.x'                    # Specify Node.js version 14.x
      displayName: 'Install Node.js'           # Display name for the step

    - script: |
        npm install                            # Install Node.js dependencies
        npm run build                          # Build the application
        npm test                               # Run tests
      displayName: 'Build and Test'            # Display name for the script step

- stage: StaticCodeAnalysis                    # Define the static code analysis stage
  jobs:
  - job: SCA                                   # Job for static code analysis
    pool:
      vmImage: 'ubuntu-latest'                 # Use the latest Ubuntu image for the job
    steps:

    - task: SonarQubePrepare@4                 # Task to prepare for SonarQube analysis
      inputs:
        SonarQube: 'SonarQubeServiceConnection' # Service connection for SonarQube
        projectKey: 'PetClinic'                # Unique project key
        projectName: 'Pet Clinic'              # Name of the project
        projectVersion: '1.0'                  # Version of the project

    - script: |
        npm install                            # Install Node.js dependencies
        sonar-scanner                         # Run SonarQube scanner
      displayName: 'Run SonarQube Analysis'    # Display name for the script step

    - task: SonarQubePublish@4                 # Task to publish SonarQube results
      inputs:
        pollingTimeoutSec: '300'               # Polling timeout for results