trigger:
- main  # Trigger pipeline on changes to the 'main' branch

variables:
  - group: AWS_Temporary_Credentials  # Group of variables for AWS temporary credentials.

stages:
- stage: Deploy  # Define the deployment stage
  jobs:
  - job: DeployToAWS  # Job for deploying to AWS
    pool:
      vmImage: 'ubuntu-latest'  # Use the latest Ubuntu image for the job
    steps:
    - checkout: self  # Checkout the code repository
      persistCredentials: true  # Keep credentials for subsequent tasks

    - script: |
        # Export AWS credentials from the variables
        export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
        export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
        export AWS_SESSION_TOKEN=$(AWS_SESSION_TOKEN)

        # Change directory to Terraform configuration files
        cd terraform

        # Initialize Terraform configuration
        terraform init
        # Apply Terraform changes automatically
        terraform apply -auto-approve
      displayName: 'Run Terraform'

    - script: |
        # Export AWS credentials from the variables
        export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
        export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
        export AWS_SESSION_TOKEN=$(AWS_SESSION_TOKEN)

        # Make the Ansible inventory generation script executable
        chmod +x ansible/generate_inventory.sh
        # Run the Ansible inventory generation script
        ./ansible/generate_inventory.sh

        # Execute the Ansible playbook using the generated inventory
        ansible-playbook -i ansible/inventory/hosts.ini ansible/site.yml
      displayName: 'Run Ansible'