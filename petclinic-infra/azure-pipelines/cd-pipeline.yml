trigger:
- main

variables:
  - group: AWS_Temporary_Credentials

stages:
- stage: Deploy
  jobs:
  - job: DeployToAWS
    pool:
      vmImage: 'windows-latest'
    steps:
    - checkout: self
      persistCredentials: true

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Export AWS credentials
          $env:AWS_ACCESS_KEY_ID = "${{ secrets.AWS_ACCESS_KEY_ID }}"
          $env:AWS_SECRET_ACCESS_KEY = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          $env:AWS_SESSION_TOKEN = "${{ secrets.AWS_SESSION_TOKEN }}"

          # Navigate to Terraform directory
          Set-Location -Path './terraform'
          terraform init
          terraform apply -auto-approve
      displayName: 'Run Terraform'

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Navigate to Ansible directory
          Set-Location -Path './ansible'
          & ./generate_inventory.sh

          # Run Ansible playbook
          ansible-playbook -i ./inventory/hosts.ini site.yml
      displayName: 'Run Ansible'

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Configure kubectl with kubeconfig
          echo "$env:KUBECONFIG_FILE_CONTENT" | Out-File -FilePath "$(Build.SourcesDirectory)\kubeconfig"
          $env:KUBECONFIG="$(Build.SourcesDirectory)\kubeconfig"

          # Apply Kubernetes manifests
          kubectl apply -f k8s-manifests/dev/app-deployment.yaml
          kubectl apply -f k8s-manifests/dev/db-deployment.yaml
          kubectl apply -f k8s-manifests/dev/memcache-deployment.yaml
          kubectl apply -f k8s-manifests/dev/rabbitmq-deployment.yaml
          kubectl apply -f k8s-manifests/dev/ingress.yaml
      displayName: 'Deploy Kubernetes Manifests'
      env:
        KUBECONFIG_FILE_CONTENT: $(KUBECONFIG_FILE_CONTENT)